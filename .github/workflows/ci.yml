name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        run: pnpm install
      - name: Run ESLint
        run: pnpm lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        run: pnpm install
      - name: Generate Prisma client
        run: npx prisma generate
      - name: Build
        run: pnpm build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next/

  # Add test job when tests are implemented
  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   services:
  #     postgres:
  #       image: postgres:16
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: dustebin_test
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'pnpm'
  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: 8
  #         run_install: false
  #     - name: Install dependencies
  #       run: pnpm install
  #     - name: Run migrations
  #       run: npx prisma migrate deploy
  #       env:
  #         DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dustebin_test
  #     - name: Run tests
  #       run: pnpm test
  #       env:
  #         DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dustebin_test
  #         CLEANUP_API_KEY: test-api-key

  # Add deployment job when ready for production
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build, test]
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-output
  #         path: .next/
  #     - name: Deploy to production
  #       # Add deployment steps here
